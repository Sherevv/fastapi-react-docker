version: "3.9"

services:
  db:
    container_name: postgres_db
    image: postgres:14.2
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - postgres
#    networks:
#      - db-tier
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  backend:
    build:
      context: .
      target: backend
    command: uvicorn app.main:app --host 0.0.0.0 --reload
    user: "${UID}:${GID}"
    ports:
      - "${API_PORT}:8000"
    volumes:
      - "./backend:/app"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
    depends_on:
      - db
    networks:
      - postgres

#    networks:
#      - back-tier
#      - db-tier

  frontend_dev:
    build:
      context: .
      target: frontend_dev
    volumes:
      - ./frontend/src:/app/src
      - node_modules:/app/node_modules
    ports:
      - 3000:3000
#    networks:
#      - front-tier
#      - back-tier
    depends_on:
      - backend

volumes:
  postgres_data:
  node_modules:
  pgadmin:

networks:
  postgres:
    driver: bridge

#networks:
#  front-tier:
#    external: true
#    name: host
#  back-tier:
#  db-tier: