version: "3.9"

services:
  db:
    container_name: postgres_db
    image: postgres:14.2
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:7-alpine
    ports:
      - 6379:6379
    networks:
      - rabbitmq

  rabbitmq3:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 15672:15672
      - 5672:5672
      - 25676:25676
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    networks:
      - postgres
      - rabbitmq

  backend:
    container_name: backend
    build:
      context: .
      target: backend
    command: uvicorn app.main:app --host 0.0.0.0 --reload
    user: "${UID}:${GID}"
    ports:
      - "${API_PORT}:8000"
    volumes:
      - "./backend:/app"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - BROKER_URL=pyamqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq3:5672
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - rabbitmq3
      - redis
    networks:
      - postgres
      - rabbitmq

  flower:
    container_name: flower
    build:
      context: .
      target: backend
    command: celery -A app.worker:celery flower --loglevel=DEBUG
    ports:
      - 5556:5555
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - BROKER_URL=pyamqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq3:5672
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_BROKER_API=http://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq3:15672/api/
      - FLOWER_DEBUG=True
    volumes:
      - "./backend:/app"
    depends_on:
      - backend
      - rabbitmq3
      - redis
    networks:
      - postgres
      - rabbitmq

  worker:
    container_name: celery
    build:
      context: .
      target: backend
    command: celery -A app.worker:celery worker --loglevel=info
    volumes:
      - "./backend:/app"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - BROKER_URL=pyamqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq3:5672
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - backend
      - rabbitmq3
      - redis
    networks:
      - postgres
      - rabbitmq


  frontend_dev:
    container_name: "frontend_dev"
    build:
      context: .
      target: frontend_dev
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    command: yarn dev
    ports:
      - 3001:8001
#    networks:
#      - front-tier
    depends_on:
      - backend


volumes:
  postgres_data:
  pgadmin:

networks:
  postgres:
    driver: bridge
  rabbitmq:
    driver: bridge
