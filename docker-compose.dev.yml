version: "3.8"

services:

  backend:
    container_name: backend_dev
    user: "${UID}:${GID}"
    ports:
      - "${API_PORT}:8000"
    volumes:
      - "./backend:/app"

  backend_debug:
    container_name: backend_debug
    build:
      context: .
      target: backend_debug
    command:  python -m debugpy --wait-for-client --listen 0.0.0.0:5678 -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000

    user: "${UID}:${GID}"
    ports:
      - "8764:8000"
      - "5678:5678"
    volumes:
      - ./backend:/app
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - BROKER_URL=pyamqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq3:5672
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db
      - rabbitmq3
      - redis
    networks:
      - postgres
      - rabbitmq

  frontend_dev:
    container_name: frontend_dev
    build:
      context: .
      target: frontend_dev
    volumes:
      - ./frontend/src:/app/src
      - /app/node_modules
    command: yarn dev
    ports:
      - 3001:3001
    depends_on:
      - backend

